[gcode_macro PURGE_BUCKET]
gcode:
    SAVE_GCODE_STATE NAME=PURGE
    G92 E0 ; Reset Extruder
    G1 Z2.0 F3000 ; Move Z Axis up little to prevent scratching of Heat Bed
    G1 X10 Y20 Z0.3 F5000.0 ; Move to start position
    G1 X180 Y20.0 Z0.24 F1500.0 E8 ; Draw the first line
    G1 X180 Y20.4 Z0.24 F5000.0 ; Move to side a little
    G1 X10 Y20.4 Z0.24 F1500.0 E8 ; Draw the second line
    G92 E0 ; Reset Extruder
    G1 Z2.0 F3000 ; Move Z Axis up little to prevent scratching of Heat Bed
    G1 X10 Y24 Z0.2 F5000.0 ; Move over to prevent blob squish
    RESTORE_GCODE_STATE NAME=PURGE

[gcode_macro PRINT_START]
gcode:
    SAVE_GCODE_STATE NAME=start
    {% set bed_temp = params.BED|default('60') %}
    {% set extruder_temp = params.EXTRUDER|default('205') %}
    {% set chamber_temp = params.CHAMBER|default('0') %}
    {% set filament_type = params.FTYPE|default('PLA') %}
    {% set spool = params.FID|default('3DLine_PLA_Black')|string %}
    _GET_SPOOL_ID NAME={spool}
    CG28
    BED_MESH_PROFILE LOAD={bed_temp}
    M117 Mesh loaded
    
	  servo_off
    M117 Starting warmup
    G1 Z10 F3000                       ; move nozzle away from bed
    
    M117 Warmup
  	M104 S{extruder_temp|int}
    M140 S{bed_temp}

    M141 S{chamber_temp}
	
    M190 S{bed_temp}                        ; set bed temp and wait for it reach temp
    M109 S{extruder_temp|int}               ; M109 heat and wait for it to reach temp
    M300
    M117 It is woooooorm!!

    G1 Z5 F5000                        ; move head 5mm from bed surface
    M83                                ; Make the E relative independant of other axis
    M117 Purging
    PURGE_BUCKET
    G11 # unretract
    M117 Starting Print
    RESTORE_GCODE_STATE NAME=start

[gcode_macro PRINT_END]
gcode:
    SAVE_GCODE_STATE NAME=STATE_PRINT_END
    ##### Get Boundaries #####
    {% set max_z = printer.toolhead.axis_maximum.z|float %}
    {% set current_z = printer.toolhead.position.z|float %}
    ##### Calculate save move #####
    {% if current_z < (max_z - 2.0) %}
        {% set move_z = 2.0 %}
    {% else %}
        {% set move_z = max_z - act_z %}
    {% endif %}
    ##### end of definitions #####
    M400                                     ; wait for buffer to clear
    G92 E0                                   ; zero the extruder
    M83                                      ; relative extrusion
    G1 E-1.0 F3600                           ; retract filament
    G91                                      ; relative positioning
    G0 Z{move_z} F1200  ; move nozzle to remove stringing
    G90
    ### MOVE X/Y AWAY FROM PRINT
    G1 X370 Y310 F10000
    M400                           ; wait for buffer to clear
    CLEAR_PAUSE	
    _ADD_PRINT_TIME
    _SD_PRINT_STATS R='done'
    _SD_PRINTER_STATS
    TURN_OFF_HEATERS
    M107                           ; turn off fan
    BED_MESH_CLEAR
    M18
    #M142 S45
    _SD_PRINTER_STATS
    UPDATE_DELAYED_GCODE ID=_DELAY_SDCARD_RESET_FILE DURATION=1
    UPDATE_DELAYED_GCODE ID=_CLEAR_DISPLAY DURATION=10
    # {% set endstop_start = printer["gcode_macro PRINT_START"].endstop %}
    # {% set endstop_end = printer['temperature_sensor endstop'].temperature %}
    # _PRINT_AR T="{"PRINT_END done. Endstop temp START:%2.2fC END:%2.2fC" % (endstop_start, endstop_end)}"
    RESTORE_GCODE_STATE NAME=STATE_PRINT_END

    ## purge and clean the nozzle in prep for printing    
[gcode_macro NOZZLECLEAN]
gcode:
  # store min extrution temp in variable
  {% set minTemp = printer.configfile.config["extruder"]["min_extrude_temp"] %}
  SAVE_GCODE_STATE Name=STATE_NOZZLECLEAN
  _PRINT_AR T="Clean Nozzle" SHOW_LCD=true
  CG28                  ; home if not already homed
  G90                    ; absolute positioning
  G1 X35 Y352 Z10 F9000  ; move to purge bucket location
  # check the Extruder temp is above minimum extrution temp
  {% set extruder_target = printer.extruder.target %}
  {% if printer.extruder.temperature|int < minTemp|int %}
    _PRINT_AR T="{"Extruder Temp to low heat to %2dC" % (minTemp|int + 30)}"
    M109 S{minTemp|int + 30} ; heat extruder and wait
  {% endif %}
  G1 Z2.5 F900  ; lower Z
  G92 E0        ; reset Extruder
  M83           ; relative extrusion
  G1 E5.00 F500 ; purge filament (5mm)
  G1 E5.00 F800 ; purge filament (5mm)
  G1 E-0.5 F800 ; retract filament (0.5)
  G4 P500
  _WIPE
  # restore old extruder temperature
  M109 S{extruder_target}
  UPDATE_DELAYED_GCODE ID=_CLEAR_DISPLAY DURATION=1
  RESTORE_GCODE_STATE Name=STATE_NOZZLECLEAN

[gcode_macro _WIPE]
gcode:
  G90 ; absolute positioning
  # move to wiper start pos
  G0 X80.00 Y355 Z1.5 F3000
  # move head diagonal to brush
  {% for wipe in range(5) %}
    {% for coordinate in [(120,350),(80,350)] %}
      G0 X{coordinate[0]} Y{coordinate[1] + 1.0 * wipe} F{6000 + 1000 * wipe}
    {% endfor %}
  {% endfor %}
  G0 X120 Y355 F18000
    
[gcode_macro PRIME_LINE]
gcode:
  # define values for easiermodification
  {% set seg = 11 %}
  {% set lenght = 220 %}
  {% set extrude = 22 %}
  SAVE_GCODE_STATE NAME=STATE_PRIME_LINE
  # calculate values of each segment
  {% set y_seg = lenght|float / seg|float %}
  {% set e_seg = extrude|float / seg|float %}
  _PRINT_AR T="Prime Line" SHOW_LCD=true
  CG28                                  ; home if not already homed
  G92 E0                                 ; reset Extruder
  G90                                    ; absolute positioning
  G1 X5 Y30 Z5 F10000                    ; move to start position
  G1 Z0.24 F900                          ; move Z Axis down
  M83                                    ; relative extrusion
  G91                                    ; relative positioning
  {% for segment in range(seg|int-1) %}  ; draw the first line
    G1 Y{y_seg} E{e_seg} F1500.0
  {% endfor %}    
  G1 X0.4                                ; move to side
  {% for segment in range(seg|int-1) %}  ; draw the second line
    G1 Y-{y_seg} E{e_seg} F1500.0
  {% endfor %}
  G1 Z5.0 F1500                          ; move Z Axis up
  G92 E0                                 ; reset Extruder
  UPDATE_DELAYED_GCODE ID=_CLEAR_DISPLAY DURATION=1
  RESTORE_GCODE_STATE NAME=STATE_PRIME_LINE

[delayed_gcode _DELAY_SDCARD_RESET_FILE]
gcode:
  SDCARD_RESET_FILE