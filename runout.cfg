#[filament_switch_sensor runout]
##   When set to True, a PAUSE will execute immediately after a runout
##   is detected. Note that if pause_on_runout is False and the
##   runout_gcode is omitted then runout detection is disabled. Default
##   is True.
#pause_on_runout: FALSE
#runout_gcode:
#  {action_respond_info("RUNOUT Switch Sensor: Filament runout")}
#	PAUSE
#insert_gcode:
##   {action_respond_info("RUNOUT Switch Sensor: Filament inserted")}
##   The minimum amount of time in seconds to delay between events.
##   Events triggered during this time period will be silently
##   ignored. The default is 3 seconds.
##event_delay: 3.0
##   The amount of time to delay, in seconds, between the pause command
##   dispatch and execution of the runout_gcode. It may be useful to
##   increase this delay if OctoPrint exhibits strange pause behavior.
##   Default is 0.5 seconds.
##pause_delay: 0.5
##    XYE mcu E0DET
#switch_pin: ^!P1.26

[filament_motion_sensor runout]
#   The minimum length of filament pulled through the sensor to trigger
#   a state change on the switch_pin
#   Default is 7 mm.
detection_length: 7.0
extruder: extruder
pause_on_runout: FALSE
runout_gcode:
  {action_respond_info("RUNOUT Motion Sensor: Filament runout")}
  PAUSE
insert_gcode:
	{action_respond_info("RUNOUT Motion Sensor: Filament inserted")}
#   The minimum amount of time in seconds to delay between events.
#   Events triggered during this time period will be silently
#   ignored. The default is 3 seconds.
#event_delay: 3.0
#   The amount of time to delay, in seconds, between the pause command
#   dispatch and execution of the runout_gcode. It may be useful to
#   increase this delay if OctoPrint exhibits strange pause behavior.
#   Default is 0.5 seconds.
#pause_delay: 0.5
##    XYE mcu E0DET
switch_pin: ^!P1.26

#####################################################################
# 	Macro
#####################################################################
[gcode_macro _RUNOUT_INFO]
gcode:
  {% if 'filament_switch_sensor runout' in printer.configfile.settings %}
    {% set enable = printer['filament_switch_sensor runout'].enabled %}
    {% set detect = printer['filament_switch_sensor runout'].filament_detected %}
    {action_respond_info("RUNOUT Switch Sensor: 
                          Enabled: %s
                          Detect Filament: %s" % (enable|lower,detect|lower))}
  {% elif 'filament_motion_sensor runout' in printer.configfile.settings %}
    #{% set enable = printer['filament_motion_sensor runout'].enabled %}
    #{% set detect = printer['filament_motion_sensor runout'].filament_detected %}
    {% set enable = true %}
    {% set detect = true %}
    {action_respond_info("RUNOUT Motion Sensor: 
                          Enabled: %s
                          Detect Filament: %s" % (enable|lower,detect|lower))}
  {% endif %}

  
[gcode_macro M600]
gcode:
  PAUSE   ; everything needed is defined there
 
#####################################################################
# 	LCD Menu
#####################################################################   
[menu __main __control __runoutonoff]
type: input
enable: {'filament_switch_sensor runout' in printer.configfile.settings}
name: Runout: {'ON ' if menu.input else 'OFF'}
input: {printer['filament_switch_sensor runout'].enabled}
input_min: 0
input_max: 1
input_step: 1
index: 4
gcode:
  SET_FILAMENT_SENSOR SENSOR=runout ENABLE={menu.input|int}
  
[menu __main __control __runoutonoff]
type: input
enable: {'filament_motion_sensor runout' in printer.configfile.settings}
name: Runout: {'ON ' if menu.input else 'OFF'}
#input: {printer['filament_switch_sensor runout'].enabled}
input: 1
input_min: 0
input_max: 1
input_step: 1
index: 4
gcode:
  SET_FILAMENT_SENSOR SENSOR=runout ENABLE={menu.input|int}