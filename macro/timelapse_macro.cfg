
[gcode_macro TIMELAPSE_NEW_FRAME]
gcode:
 {action_call_remote_method("timelapse_newframe")}
 ; leave this in a separate macro!

[gcode_macro TIMELAPSE_TAKE_FRAME]
gcode:
  ;SAVE_GCODE_STATE NAME=SNAPSHOT
  ;M117 move your head/bed here, do retracts and so on
  ;G4 P500 ;dwell
  TIMELAPSE_NEW_FRAME
  ;G4 P500 ;moar dwelling
  ;M117 don't forget to un-retract!
  ;RESTORE_GCODE_STATE NAME=SNAPSHOT

[gcode_macro TIMELAPSE_RENDER]
gcode:
 {action_call_remote_method("timelapse_render")}
 ; leave this in a separate macro!

[delayed_gcode HYPERLAPSE_LOOP]
gcode:
  HYPERLAPSE

[gcode_macro HYPERLAPSE]
variable_cycle: 0
gcode:
  {% if cycle > 0 %}
    TIMELAPSE_NEW_FRAME
    UPDATE_DELAYED_GCODE ID=HYPERLAPSE_LOOP DURATION={printer["gcode_macro HYPERLAPSE"].cycle}
  {% endif %}

[gcode_macro HYPERLAPSE_START]
variable_defaultcycle: 30  # edit the "cycle" time here (in seconds)
gcode:
  {% if params.VALUE is defined %}
    SET_GCODE_VARIABLE MACRO=HYPERLAPSE VARIABLE=cycle VALUE={params.VALUE}
  {% else %}
    SET_GCODE_VARIABLE MACRO=HYPERLAPSE VARIABLE=cycle VALUE={printer["gcode_macro HYPERLAPSE_START"].defaultcycle}
  {% endif %}
  HYPERLAPSE
  
[gcode_macro HYPERLAPSE_STOP]
gcode:
  UPDATE_DELAYED_GCODE ID=HYPERLAPSE_LOOP DURATION=0