#####################################################################
#  Macros
#####################################################################
[gcode_macro CANCEL_PRINT]
rename_existing: BASE_CANCEL_PRINT
variable_execute: 'false'
variable_extrude: 1.0
gcode:
  SET_GCODE_VARIABLE MACRO=CANCEL_PRINT VARIABLE=execute VALUE='"true"'
  ##### Get Boundaries #####
    {% set max_z = printer.toolhead.axis_maximum.z|float %}
    {% set current_z = printer.toolhead.position.z|float %}
    ##### Calculate save move #####
    {% if current_z < (max_z - 2.0) %}
        {% set move_z = 2.0 %}
    {% else %}
        {% set move_z = max_z - act_z %}
    {% endif %}
    ##### end of definitions #####
  _ADD_PRINT_TIME
  _SD_PRINT_STATS R='canceled'
  _SD_PRINTER_STATS
  CLEAR_PAUSE
  SDCARD_RESET_FILE
  BASE_CANCEL_PRINT
  M400                                     ; wait for buffer to clear
  G92 E0                                   ; zero the extruder
  M83                                      ; relative extrusion
  G1 E-1.0 F3600                           ; retract filament
  G91                                      ; relative positioning
  G0 Z{move_z} F1200  ; move nozzle to remove stringing
  G90
  G1 X310 Y310 F10000
  M400
  M117 Ready
  TIMELAPSE_TAKE_FRAME
  HYPERLAPSE_STOP
  TURN_OFF_HEATERS                         ; turn off heaters
  M107                                     ; turn off fan
  #M142 S30                                ; vent chamber (setting fan to below ambient) 
  #UPDATE_DELAYED_GCODE ID=_DELAY_VENT_OFF DURATION=1800
  UPDATE_DELAYED_GCODE ID=_CLEAR_DISPLAY DURATION=10
  #SET_GCODE_VARIABLE MACRO=PRINT_END VARIABLE=print_done VALUE='"true"'

[gcode_macro PAUSE]
rename_existing: BASE_PAUSE
variable_extrude: 1.0
gcode:
  # store min and current extrution temp in variable
  {% set minTemp = printer.configfile.config["extruder"]["min_extrude_temp"] %}
  {% set extruder_target = printer.extruder.target %}
  ##### read E from pause macro #####
  {% set E = printer["gcode_macro PAUSE"].extrude|float %}
  ##### calculate save lift position #####
  {% set max_z = printer.toolhead.axis_maximum.z|float %}
  {% set act_z = printer.toolhead.position.z|float %}
  {% if act_z < (max_z - 2.0) %}
    {% set z_safe = 2.0 %}
  {% else %}
    {% set z_safe = max_z - act_z %}
  {% endif %}
  ##### end of definitions #####
  ##### added because of motion sensor #####
  ## not sure why but sometime it generate an runout event while heatsoak  
  {% if printer.extruder.temperature|int < minTemp|int %}
      {action_respond_info("Extruder Temp to low heat to %2dC" % (minTemp|int + 30))}
      M109 S{minTemp|int + 30} ; heat extruder and wait
  {% endif %}
  ##### added because of motion sensor ##### 
  M400
  SAVE_GCODE_STATE NAME=PAUSE_state
  M117 Pause
  BASE_PAUSE
  G91
  G1 E-{E} F2100
  G1 Z{z_safe} F900
  G90
  G1 X310 Y310 F3200 ; park nozzle at brush bin
  # restore old extruder temperature
  M109 S{extruder_target}
  UPDATE_DELAYED_GCODE ID=_CLEAR_DISPLAY DURATION=10

[gcode_macro RESUME]
rename_existing: BASE_RESUME
gcode:
  ##### read E from pause macro #####
  {% set E = printer["gcode_macro PAUSE"].extrude|float %}
  ##### end of definitions #####
  M117 Printing
  G91
  G1 E{E} F2100
  RESTORE_GCODE_STATE NAME=PAUSE_state
  BASE_RESUME
  UPDATE_DELAYED_GCODE ID=_CLEAR_DISPLAY DURATION=10

#####################################################################
#                 LCD menu that works with mainsail                 #
#####################################################################
#   Main
#   ...
#   + SD Card
#       + Show loaded file
#       + Load File (only if not printing and no file loaded)
#       + Unload File (only if not printing and a file is loaded)
#       + Start printing (only if not printing and a file is loaded)
#       + Pause printing (only while printing)
#       + Resume printing (only while paused)
#       + Cancel printing (only while paused)

[menu __main __sdcard]
type: list
enable: {'virtual_sdcard' in printer}
name: SD Card

[menu __main __sdcard __file]
type: command
name: File: {printer.print_stats.filename}
index: 0

[menu __main __sdcard __load]
type: vsdlist
#type: list
#event_sender: __vsdfiles
enable: {printer.print_stats.filename == "" and (printer.print_stats.state == "standby" or printer.print_stats.state == "error" or printer.print_stats.state == "complete")}
name: Load file
index: 1

[menu __main __sdcard __unload]
type: command
enable: {printer.print_stats.filename != "" and (printer.print_stats.state == "standby" or printer.print_stats.state == "error" or printer.print_stats.state == "complete")}
name: Unload file
index: 2
gcode:
  # back is needed to reload the modified menu structure
  {menu.back()}
  SDCARD_RESET_FILE

[menu __main __sdcard __start]
type: command
enable: {printer.print_stats.filename != "" and (printer.print_stats.state == "standby" or printer.print_stats.state == "error" or printer.print_stats.state == "complete")}
name: Start print
index: 3
gcode:
  {menu.exit()}
  M24

[menu __main __sdcard __pause]
type: command
enable: {printer.print_stats.state == "printing"}
name: Pause print
gcode:
  # back is needed to reload the modified menu structure
  {menu.back()}
  PAUSE

[menu __main __sdcard __resume]
type: command
enable: {printer.print_stats.state == "paused"}
name: Resume print
gcode:
  {menu.exit()}
  RESUME

[menu __main __sdcard __cancel]
type: command
enable: {printer.print_stats.state == "paused"}
name: Cancel print
gcode:
  {menu.exit()}
  CANCEL_PRINT